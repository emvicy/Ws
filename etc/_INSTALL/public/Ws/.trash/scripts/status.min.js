(function(){document.addEventListener("DOMContentLoaded",()=>{const elLog=document.getElementById('log');const elStatus=document.getElementById('status');const elClientList=document.getElementById('clientListSelect');const elClientCount=document.getElementById('clientCount');const elMaxClients=document.getElementById('maxClients');const elMaxConnections=document.getElementById('maxConnections');const log=(msg)=>{return elLog.insertAdjacentHTML('afterbegin',`${msg}<br />`);};const statusMsg=(msgData)=>{switch(msgData.type){case"info":return log(msgData.text);case"warning":return log(`<span class="warning">${msgData.text}</span>`);}};const clientConnected=(data)=>{elClientList.append(new Option(data.client,data.client));elClientCount.textContent=data.clientCount;};const clientDisconnected=(data)=>{[...elClientList.options].some((option,index)=>{if(option.value===data.client){elClientList.options[index].remove();return true;}});elClientCount.textContent=data.clientCount;};const refreshServerinfo=(serverinfo)=>{elClientCount.textContent=serverinfo.clientCount;elMaxClients.textContent=serverinfo.maxClients;elMaxConnections.textContent=serverinfo.maxConnectionsPerIp;for(let client in serverinfo.clients){if(!serverinfo.clients.hasOwnProperty(client)){continue;}
elClientList.append(new Option(client,client));}};const clientActivity=(client)=>{[...elClientList.options].some((option,index)=>{if(option.value===client){elClientList.options[index].style.color='red';setTimeout(()=>{if(elClientList.options[index]){elClientList.options[index].style.color='black';}},600);}});};let socket=null;const serverUrl='ws://localhost:8000/status';if(window.MozWebSocket){socket=new MozWebSocket(serverUrl);}else if(window.WebSocket){socket=new WebSocket(serverUrl);}
socket.onopen=(msg)=>{elStatus.classList.remove('offline');elStatus.classList.add('online');elStatus.innerText='connected';};socket.onclose=(msg)=>{elStatus.classList.remove('online');elStatus.classList.add('offline');elStatus.innerText='disconnected';};socket.onmessage=(msg)=>{let response=JSON.parse(msg.data);switch(response.action){case"statusMsg":return statusMsg(response.data);case"clientConnected":return clientConnected(response.data);case"clientDisconnected":return clientDisconnected(response.data);case"clientActivity":return clientActivity(response.data);case"serverInfo":return refreshServerinfo(response.data);}};elStatus.addEventListener('click',()=>{return socket.close();});});}).call();